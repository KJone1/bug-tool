[{"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\index.tsx":"1","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\App.tsx":"2","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\bugform.tsx":"3","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\axios.tsx":"4","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\loadingScreen.tsx":"5","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\styles\\colors.js":"6","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\Bug List\\openBugList.tsx":"7","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\sortButton.tsx":"8","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\addBugButton.tsx":"9","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\deleteButton.tsx":"10","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\completeButton.tsx":"11"},{"size":314,"mtime":1611920221503,"results":"12","hashOfConfig":"13"},{"size":1941,"mtime":1612515016851,"results":"14","hashOfConfig":"13"},{"size":4166,"mtime":1612538076739,"results":"15","hashOfConfig":"13"},{"size":1640,"mtime":1612536775597,"results":"16","hashOfConfig":"13"},{"size":403,"mtime":1612636520309,"results":"17","hashOfConfig":"13"},{"size":334,"mtime":1612368328337,"results":"18","hashOfConfig":"13"},{"size":4328,"mtime":1612640901433,"results":"19","hashOfConfig":"13"},{"size":1349,"mtime":1612260327751,"results":"20","hashOfConfig":"13"},{"size":876,"mtime":1612515195386,"results":"21","hashOfConfig":"13"},{"size":1316,"mtime":1612639110999,"results":"22","hashOfConfig":"13"},{"size":1772,"mtime":1612638992763,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5s1u2e",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\index.tsx",[],["51","52"],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\App.tsx",[],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\bugform.tsx",[],["53","54"],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\axios.tsx",[],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\loadingScreen.tsx",[],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\styles\\colors.js",["55"],"export default {\r\n  pink: \"#ff165d\",\r\n  grey: \"#282c34\",\r\n  yellow: \"#E8C547\",\r\n  jet: \"#30323D\",\r\n  independence: \"#4D5061\",\r\n  blue: \"#5C80BC\",\r\n  wolf: \"#CDD1C4\",\r\n  pistachio: \"#8ACB88\",\r\n  coralBlack: \"#4F6272\",\r\n  peach: \"#F4C095\",\r\n  darkpurple: \"#22031F\",\r\n  dirtywhite: \"#EFF6EE\",\r\n  white: \"#FFFCFF\",\r\n  black: \"#300\",\r\n};\r\n",["56","57"],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\Bug List\\openBugList.tsx",["58"],"import {\r\n  Badge,\r\n  Flex,\r\n  SimpleGrid,\r\n  Stack,\r\n  Text,\r\n  Tag,\r\n  TagLabel,\r\n} from \"@chakra-ui/react\";\r\nimport http from \"../../axios\";\r\nimport LoadingScreen from \"../loadingScreen\";\r\nimport CompleteButton from \"../buttons/completeButton\";\r\nimport day from \"dayjs\";\r\nimport { extendTheme } from \"@chakra-ui/react\";\r\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\r\nimport DeleteButton from \"../buttons/deleteButton\";\r\nimport colors from \"../../styles/colors\";\r\n\r\ninterface PropType {\r\n  type: string;\r\n  IsCompleted?: Boolean;\r\n  VerNum?: Number;\r\n}\r\nconst breakpoints = createBreakpoints({\r\n  sm: \"320px\",\r\n  md: \"768px\",\r\n  lg: \"960px\",\r\n  xl: \"1200px\",\r\n});\r\n// 3. Extend the theme\r\nconst theme = extendTheme({ breakpoints });\r\n\r\nfunction BugList(props: PropType) {\r\n  const httpCall = http(props.type, props.IsCompleted, props.VerNum);\r\n\r\n  if (httpCall.length !== 0) {\r\n    return (\r\n      <>\r\n        <SimpleGrid\r\n          columns={1}\r\n          spacingY=\"10px\"\r\n          overflowY=\"scroll\"\r\n          mb={\"9vh\"}\r\n          mt={4}\r\n          w={{ base: \"90%\", md: \"70%\", lg: \"50%\" }}\r\n          justifyContent=\"center\"\r\n        >\r\n          {httpCall.map((array: any, index: number) => (\r\n            <Flex\r\n              key={index}\r\n              maxW=\"99%\"\r\n              h=\"100%\"\r\n              color=\"black\"\r\n              backgroundColor={colors.white}\r\n              borderRadius=\"5px\"\r\n              p={4}\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Flex flexDirection=\"column\">\r\n                <Stack direction=\"row\" display=\"flex\">\r\n                  {array.IsComplete ? (\r\n                    <Text\r\n                      fontSize={{ base: \"2vh\", md: \"2.5vh\", lg: \"3vh\" }}\r\n                      fontWeight=\"700\"\r\n                      as=\"del\"\r\n                    >\r\n                      {`${array.BugName}`}\r\n                    </Text>\r\n                  ) : (\r\n                    <Text\r\n                      fontSize={{ base: \"2.2vh\", md: \"2.5vh\", lg: \"3vh\" }}\r\n                      fontWeight=\"700\"\r\n                    >\r\n                      {`${array.BugName}`}\r\n                    </Text>\r\n                  )}\r\n\r\n                  <Tag\r\n                    size=\"sm\"\r\n                    variant=\"outline\"\r\n                    colorScheme=\"blue\"\r\n                    borderRadius=\"30px\"\r\n                    px={4}\r\n                    h=\"100%\"\r\n                    alignSelf=\"center\"\r\n                  >\r\n                    <TagLabel> {`v${array.Version}`}</TagLabel>\r\n                  </Tag>\r\n                </Stack>\r\n\r\n                <Text color={colors.coralBlack} fontSize=\"2vh\" fontWeight=\"500\">\r\n                  {`${array.BugDescription ? `${array.BugDescription}` : \"â€”\"}`}\r\n                </Text>\r\n\r\n                <Flex flexDirection=\"row\">\r\n                  <Text color=\"gray.400\" fontSize=\"1.8vh\" fontWeight=\"500\">\r\n                    {`Submitted by: ${array.Submitter} on ${day(\r\n                      array.createdAt\r\n                    ).format(\"DD/MM/YYYY\")}`}\r\n                  </Text>\r\n                  <Badge\r\n                    alignSelf=\"center\"\r\n                    ml=\"4px\"\r\n                    colorScheme={`${array.IsRepeatable ? \"red\" : \"green\"}`}\r\n                  >\r\n                    {`${array.IsRepeatable ? \"Repeatable\" : \"Not Repeatable\"}`}\r\n                  </Badge>\r\n                </Flex>\r\n              </Flex>\r\n\r\n              {array.IsComplete ? (\r\n                <Flex flexDir=\"column\">\r\n                  <DeleteButton id={array._id} />\r\n                </Flex>\r\n              ) : (\r\n                <Stack flexDir=\"column\" spacing={\"0.8vh\"}>\r\n                  <CompleteButton\r\n                    id={array._id}\r\n                    BugName={array.BugName}\r\n                    BugDescription={array.BugDescription}\r\n                    Version={array.Version}\r\n                    IsRepeatable={array.IsRepeatable}\r\n                    Submitter={array.Submitter}\r\n                  />\r\n                  <DeleteButton id={array._id} />\r\n                </Stack>\r\n              )}\r\n            </Flex>\r\n          ))}\r\n        </SimpleGrid>\r\n      </>\r\n    );\r\n  } else {\r\n    return <LoadingScreen />;\r\n  }\r\n}\r\n\r\nexport default BugList;\r\n","C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\sortButton.tsx",[],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\addBugButton.tsx",[],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\deleteButton.tsx",[],"C:\\code\\JS\\TypeScript Project\\Bug tool\\bugtool\\src\\components\\buttons\\completeButton.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","endLine":16,"endColumn":3},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"68","severity":1,"message":"69","line":31,"column":7,"nodeType":"70","messageId":"71","endLine":31,"endColumn":12},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]